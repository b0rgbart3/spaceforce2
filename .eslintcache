[{"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/index.js":"1","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/App.js":"2","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/reportWebVitals.js":"3","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Search/index.js":"4","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/app/store.js":"5","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/resultsSlice.js":"6"},{"size":620,"mtime":1610584750871,"results":"7","hashOfConfig":"8"},{"size":757,"mtime":1610641444515,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610561855372,"results":"10","hashOfConfig":"8"},{"size":1535,"mtime":1610641482508,"results":"11","hashOfConfig":"8"},{"size":189,"mtime":1610641599043,"results":"12","hashOfConfig":"8"},{"size":1381,"mtime":1610641535612,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1f4xrtt",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/index.js",[],["29","30"],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/App.js",["31","32","33"],"import React, {useEffect, useState} from \"react\";\nimport logo from './assets/logo1.jpg';\nimport './style.css';\nimport Search from './components/Search/index.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\nselectCount\n} from './resultsSlice.js';\n\n\nfunction Presets() {\n  return (\n    <div>\n      <h1>Presets</h1>\n      <ul>\n        <li>Appollo 11</li>\n        <li>Mars</li>\n        <li>Space Shuttle</li>\n      </ul>\n    </div>\n  )\n}\n\n\nfunction App() {\n  let count = useSelector(selectCount);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n      <Search></Search>\n    <Presets />\n\n    {count}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/reportWebVitals.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Search/index.js",["34","35","36","37","38"],"\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectCount,\n  increment,\n} from '../../resultsSlice.js';\n\nfunction Search(props) {\n    var textInput = useRef();\n    // let results = useSelector(selectResults);\n    const dispatch = useDispatch();\n\n    const [query, setQuery] = useState('');\n    let [resultsList, setResultsList] = useState([]);\n\n    function initiateQuery() {\n        let term = textInput.current.value;\n        let query = \"https://images-api.nasa.gov/search?q=\"+term;\n        \n        setQuery(query);\n\n        fetch(query)\n        .then(response => response.json())\n        .then(data => {\n            if (data && data.collection && data.collection.items) {\n              //dispatch(receivedResults(data.collection.items));\n              dispatch(increment());\n              setResultsList(data.collection.items);\n            } else {\n                dispatch(increment());\n                setResultsList([]);\n            }\n        \n    });\n\n    }\n\n        return (\n            <div>\n            <p>Search for images from the Nasa Public Image Bank:</p>\n            <input type='text' ref={textInput}></input>\n            <button onClick={initiateQuery}>SEARCH</button>\n            {/* <br></br>\n            {resultsList ? resultsList.map((item, index)=>(\n                <p k={index}>{item.data[0].description}.....</p>\n            )) : <p>No results yet</p>}\n       */}\n            </div>\n        );\n    \n\n\n}\n\nexport default Search;","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/app/store.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/resultsSlice.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":16,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"47","line":1,"column":27,"nodeType":"45","messageId":"46","endLine":1,"endColumn":35},{"ruleId":"43","severity":1,"message":"48","line":5,"column":23,"nodeType":"45","messageId":"46","endLine":5,"endColumn":34},{"ruleId":"43","severity":1,"message":"44","line":2,"column":27,"nodeType":"45","messageId":"46","endLine":2,"endColumn":36},{"ruleId":"43","severity":1,"message":"49","line":3,"column":10,"nodeType":"45","messageId":"46","endLine":3,"endColumn":21},{"ruleId":"43","severity":1,"message":"50","line":5,"column":3,"nodeType":"45","messageId":"46","endLine":5,"endColumn":14},{"ruleId":"43","severity":1,"message":"51","line":14,"column":12,"nodeType":"45","messageId":"46","endLine":14,"endColumn":17},{"ruleId":"43","severity":1,"message":"52","line":15,"column":10,"nodeType":"45","messageId":"46","endLine":15,"endColumn":21},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'selectCount' is defined but never used.","'query' is assigned a value but never used.","'resultsList' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]