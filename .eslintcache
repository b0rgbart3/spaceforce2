[{"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/index.js":"1","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/App.js":"2","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/reportWebVitals.js":"3","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Search/index.js":"4","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/app/store.js":"5","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/resultsSlice.js":"6","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/querySlice.js":"7","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Results/index.js":"8"},{"size":620,"mtime":1610584750871,"results":"9","hashOfConfig":"10"},{"size":1967,"mtime":1610668910097,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610561855372,"results":"12","hashOfConfig":"10"},{"size":2251,"mtime":1610651579932,"results":"13","hashOfConfig":"10"},{"size":258,"mtime":1610649151237,"results":"14","hashOfConfig":"10"},{"size":1409,"mtime":1610649119845,"results":"15","hashOfConfig":"10"},{"size":1394,"mtime":1610649255492,"results":"16","hashOfConfig":"10"},{"size":1501,"mtime":1610676233511,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1f4xrtt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/index.js",[],["37","38"],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/App.js",["39","40","41"],"import React, {useEffect, useState} from \"react\";\nimport logo from './assets/logo1.jpg';\nimport './style.css';\nimport Search from './components/Search';\nimport Results from './components/Results';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\nselectResult\n} from './resultsSlice.js';\nimport {\n  selectQuery,\n  newQuery\n  } from './querySlice.js';\n  \n  \n\n\nfunction Presets() {\n  let presets = [\"Apollo 11\", \"mars\", \"Space Shuttle\", \"Hubble\", \"Moon\", \"weightless\", \"gravity\",\"zero gravity\", \"g-force\", \"lunar landing\",\"Dark Side\", \"Black Holes\", \"pleiades\", \"pleiades star cluster\", \"Galaxy\", \"galaxies\", \"solar system\", \"star death\",\"Milky Way\", \"Orion\", \"Lockheed Martin\", \"Jet propulsion\", \"Saturn\", \"Pluto\",\"Venus\", \"Jupiter\", \"Jupiter's Moons\", \"LEWIS RESEARCH CENTER\", \"Space Station\", \"Earth\", \"Prometheus\", \"Pandora\", \"Cassini spacecraft\", \"Voyager\", \"Carl Sagan\", \"Chandra X-ray Observatory\", \"supernova\", \"Galaxy Evolution Explorer\", \"Spitzer Space Telescope\", \"radio emissions\", \"x-rays\", \"dark matter\", \"space walk\", \"Endeavour\", \"Bill Nye\", \"Neil deGrasse Tyson\", \"Cosmos\", \"Cape Canaveral\", \"Launch Pad\", \"Kennedy Space Center\", \"19 Tauri\"];\n  const dispatch = useDispatch();\n\n  function setPreset(preset) {\n  \n    console.log(preset);\n    dispatch(newQuery(preset));\n  }\n  \n\n  return (\n    <div>\n      <h1>Presets</h1>\n      \n      <ul className='presetList'>\n        {presets.map((preset, index) => (\n          <li key={index} onClick={()=>setPreset(preset)} className=\"presetLink\">{preset}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\n\nfunction App() {\n  let result = useSelector(selectResult);\n  let query = useSelector(selectQuery);\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Search></Search>\n      </header>\n\n    <Presets />\n\n    <h2>Current Query: {query}</h2>\n    <Results></Results>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/reportWebVitals.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Search/index.js",["42","43","44","45"],"\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectResult,\n  newResults,\n} from '../../resultsSlice.js';\nimport {\n    selectQuery,\n    newQuery\n  } from '../../querySlice.js';\n\n\n\nfunction Search(props) {\n    var textInput = useRef();\n    // let results = useSelector(selectResults);\n    const dispatch = useDispatch();\n\n    //const [localQuery, setLocalQuery] = useState('');\n    let [resultsList, setResultsList] = useState([]);\n    let result = useSelector(selectResult);\n    let query = useSelector(selectQuery);\n\n    useEffect(() => {\n        \n        console.log(\"In search index, a new query was set.\");\n       // setLocalQuery(query);\n       grabData(query);\n       textInput.current.value = query;\n       \n    }, [query]);\n\n    function grabData(term) {\n        let endpoint = \"https://images-api.nasa.gov/search?q=\"+term;\n        \n        fetch(endpoint)\n        .then(response => response.json())\n        .then(data => {\n            if (data && data.collection && data.collection.items) {\n              //dispatch(receivedResults(data.collection.items));\n              dispatch(newResults(data.collection.items));\n              setResultsList(data.collection.items);\n              console.log(data.collection.items);\n            } else {\n                dispatch(newResults([]));\n                setResultsList([]);\n            }\n            });\n        }\n\n    function initiateQuery() {\n        let term = textInput.current.value;\n        \n        if (!term || term.length < 3) {\n           term = \"\";\n        }\n        //setQuery(endpoint);\n        dispatch(newQuery(term));\n        grabData(term);\n        \n        \n    }\n\n    let localQuery = query + \"\";\n\n        return (\n            <div>\n            <p>Search for images from the Nasa Public Image Bank:</p>\n            <input type='text' ref={textInput}></input>\n            \n            <button onClick={initiateQuery}>SEARCH</button>\n            {/* <br></br>\n            {resultsList ? resultsList.map((item, index)=>(\n                <p k={index}>{item.data[0].description}.....</p>\n            )) : <p>No results yet</p>}\n       */}\n            </div>\n        );\n    \n\n\n}\n\nexport default Search;","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/app/store.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/resultsSlice.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/querySlice.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Results/index.js",["46","47","48","49","50","51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"61","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":35},{"ruleId":"57","severity":1,"message":"62","line":44,"column":7,"nodeType":"59","messageId":"60","endLine":44,"endColumn":13},{"ruleId":"57","severity":1,"message":"63","line":21,"column":10,"nodeType":"59","messageId":"60","endLine":21,"endColumn":21},{"ruleId":"57","severity":1,"message":"62","line":22,"column":9,"nodeType":"59","messageId":"60","endLine":22,"endColumn":15},{"ruleId":"64","severity":1,"message":"65","line":32,"column":8,"nodeType":"66","endLine":32,"endColumn":15,"suggestions":"67"},{"ruleId":"57","severity":1,"message":"68","line":65,"column":9,"nodeType":"59","messageId":"60","endLine":65,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":2,"column":27,"nodeType":"59","messageId":"60","endLine":2,"endColumn":36},{"ruleId":"57","severity":1,"message":"69","line":2,"column":38,"nodeType":"59","messageId":"60","endLine":2,"endColumn":44},{"ruleId":"57","severity":1,"message":"70","line":3,"column":23,"nodeType":"59","messageId":"60","endLine":3,"endColumn":34},{"ruleId":"57","severity":1,"message":"71","line":6,"column":3,"nodeType":"59","messageId":"60","endLine":6,"endColumn":13},{"ruleId":"57","severity":1,"message":"72","line":9,"column":5,"nodeType":"59","messageId":"60","endLine":9,"endColumn":16},{"ruleId":"57","severity":1,"message":"73","line":10,"column":5,"nodeType":"59","messageId":"60","endLine":10,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":29,"column":41,"nodeType":"76","endLine":29,"endColumn":86},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'result' is assigned a value but never used.","'resultsList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'grabData'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'localQuery' is assigned a value but never used.","'useRef' is defined but never used.","'useDispatch' is defined but never used.","'newResults' is defined but never used.","'selectQuery' is defined but never used.","'newQuery' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [grabData, query]",{"range":"82","text":"83"},[804,811],"[grabData, query]"]