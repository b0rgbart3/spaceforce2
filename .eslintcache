[{"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/index.js":"1","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/App.js":"2","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/reportWebVitals.js":"3","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Search/index.js":"4","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/app/store.js":"5","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/resultsSlice.js":"6","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/querySlice.js":"7"},{"size":620,"mtime":1610584750871,"results":"8","hashOfConfig":"9"},{"size":2089,"mtime":1610663405288,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610561855372,"results":"11","hashOfConfig":"9"},{"size":2251,"mtime":1610651579932,"results":"12","hashOfConfig":"9"},{"size":258,"mtime":1610649151237,"results":"13","hashOfConfig":"9"},{"size":1409,"mtime":1610649119845,"results":"14","hashOfConfig":"9"},{"size":1394,"mtime":1610649255492,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1f4xrtt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/index.js",[],["32","33"],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/App.js",["34","35","36"],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/reportWebVitals.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Search/index.js",["37","38","39","40"],"\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectResult,\n  newResults,\n} from '../../resultsSlice.js';\nimport {\n    selectQuery,\n    newQuery\n  } from '../../querySlice.js';\n\n\n\nfunction Search(props) {\n    var textInput = useRef();\n    // let results = useSelector(selectResults);\n    const dispatch = useDispatch();\n\n    //const [localQuery, setLocalQuery] = useState('');\n    let [resultsList, setResultsList] = useState([]);\n    let result = useSelector(selectResult);\n    let query = useSelector(selectQuery);\n\n    useEffect(() => {\n        \n        console.log(\"In search index, a new query was set.\");\n       // setLocalQuery(query);\n       grabData(query);\n       textInput.current.value = query;\n       \n    }, [query]);\n\n    function grabData(term) {\n        let endpoint = \"https://images-api.nasa.gov/search?q=\"+term;\n        \n        fetch(endpoint)\n        .then(response => response.json())\n        .then(data => {\n            if (data && data.collection && data.collection.items) {\n              //dispatch(receivedResults(data.collection.items));\n              dispatch(newResults(data.collection.items));\n              setResultsList(data.collection.items);\n              console.log(data.collection.items);\n            } else {\n                dispatch(newResults([]));\n                setResultsList([]);\n            }\n            });\n        }\n\n    function initiateQuery() {\n        let term = textInput.current.value;\n        \n        if (!term || term.length < 3) {\n           term = \"\";\n        }\n        //setQuery(endpoint);\n        dispatch(newQuery(term));\n        grabData(term);\n        \n        \n    }\n\n    let localQuery = query + \"\";\n\n        return (\n            <div>\n            <p>Search for images from the Nasa Public Image Bank:</p>\n            <input type='text' ref={textInput}></input>\n            \n            <button onClick={initiateQuery}>SEARCH</button>\n            {/* <br></br>\n            {resultsList ? resultsList.map((item, index)=>(\n                <p k={index}>{item.data[0].description}.....</p>\n            )) : <p>No results yet</p>}\n       */}\n            </div>\n        );\n    \n\n\n}\n\nexport default Search;","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/app/store.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/resultsSlice.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/querySlice.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":16,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":35},{"ruleId":"50","severity":1,"message":"51","line":57,"column":7,"nodeType":"52","endLine":57,"endColumn":39},{"ruleId":"45","severity":1,"message":"53","line":21,"column":10,"nodeType":"47","messageId":"48","endLine":21,"endColumn":21},{"ruleId":"45","severity":1,"message":"54","line":22,"column":9,"nodeType":"47","messageId":"48","endLine":22,"endColumn":15},{"ruleId":"55","severity":1,"message":"56","line":32,"column":8,"nodeType":"57","endLine":32,"endColumn":15,"suggestions":"58"},{"ruleId":"45","severity":1,"message":"59","line":65,"column":9,"nodeType":"47","messageId":"48","endLine":65,"endColumn":19},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'resultsList' is assigned a value but never used.","'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'grabData'. Either include it or remove the dependency array.","ArrayExpression",["62"],"'localQuery' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [grabData, query]",{"range":"65","text":"66"},[804,811],"[grabData, query]"]