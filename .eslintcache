[{"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/index.js":"1","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/App.js":"2","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/reportWebVitals.js":"3","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Search/index.js":"4","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/app/store.js":"5","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/resultsSlice.js":"6","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/querySlice.js":"7","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Results/index.js":"8","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/useProgress.js":"9","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Presets/index.js":"10"},{"size":620,"mtime":1610584750871,"results":"11","hashOfConfig":"12"},{"size":1124,"mtime":1610735309875,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610561855372,"results":"14","hashOfConfig":"12"},{"size":2245,"mtime":1610735637274,"results":"15","hashOfConfig":"12"},{"size":258,"mtime":1610649151237,"results":"16","hashOfConfig":"12"},{"size":1409,"mtime":1610649119845,"results":"17","hashOfConfig":"12"},{"size":1443,"mtime":1610721099066,"results":"18","hashOfConfig":"12"},{"size":4582,"mtime":1610735994790,"results":"19","hashOfConfig":"12"},{"size":957,"mtime":1610725625840,"results":"20","hashOfConfig":"12"},{"size":1880,"mtime":1610735823293,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1f4xrtt",{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/index.js",[],["47","48"],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/App.js",["49","50","51","52","53","54","55"],"import React, { useEffect, useState } from \"react\";\nimport logo from \"./assets/logo1.jpg\";\nimport \"./style.css\";\nimport Search from \"./components/Search\";\nimport Results from \"./components/Results\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectResult } from \"./resultsSlice.js\";\nimport { selectQuery, newQuery } from \"./querySlice.js\";\nimport Presets from \"./components/Presets\";\n\nconst options = [\"one\", \"two\", \"three\"];\nconst defaultOption = options[0];\n\nfunction App() {\n  let result = useSelector(selectResult);\n  let query = useSelector(selectQuery);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        {/* <Dropdown options={options} onChange={_onSelect} value={defaultOption} placeholder=\"Select an option\" /> */}\n        <Search />\n        <Presets />\n\n      </div>\n\n\n      {query && query != \"\" ? (\n        <Results></Results>\n      ) : (\n        <p className=\"instructions\">\n          Choose a topic or enter a search term to get started.\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/reportWebVitals.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Search/index.js",["56","57","58","59","60"],"\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectResult,\n  newResults,\n} from '../../resultsSlice.js';\nimport {\n    selectQuery,\n    newQuery\n  } from '../../querySlice.js';\n\n\n\nfunction Search(props) {\n    var textInput = useRef();\n    // let results = useSelector(selectResults);\n    const dispatch = useDispatch();\n\n    //const [localQuery, setLocalQuery] = useState('');\n    let [resultsList, setResultsList] = useState([]);\n    let result = useSelector(selectResult);\n    let query = useSelector(selectQuery);\n\n    useEffect(() => {\n        \n        console.log(\"In search index, a new query was set.\");\n       // setLocalQuery(query);\n       grabData(query);\n       textInput.current.value = query;\n       \n    }, [query]);\n\n    function grabData(term) {\n        let endpoint = \"https://images-api.nasa.gov/search?q=\"+term;\n        \n        fetch(endpoint)\n        .then(response => response.json())\n        .then(data => {\n            if (data && data.collection && data.collection.items) {\n      \n              dispatch(newResults(data.collection.items));\n              setResultsList(data.collection.items);\n              console.log(data.collection.items);\n            } else {\n                dispatch(newResults([]));\n                setResultsList([]);\n            }\n            });\n        }\n\n    function initiateQuery() {\n        let term = textInput.current.value;\n        \n        if (!term || term.length < 3) {\n           term = \"\";\n        }\n        if (term == \"Topics\") { term = \"\";}\n        //setQuery(endpoint);\n        dispatch(newQuery(term));\n        grabData(term);\n        \n        \n    }\n\n    let localQuery = query + \"\";\n\n        return (\n            <div>\n            <p>Exploring Nasa's Public Image Bank:</p>\n            <input type='text' ref={textInput} className='searchInput'></input>\n            \n            <button onClick={initiateQuery}>SEARCH</button>\n            {/* <br></br>\n            {resultsList ? resultsList.map((item, index)=>(\n                <p k={index}>{item.data[0].description}.....</p>\n            )) : <p>No results yet</p>}\n       */}\n            </div>\n        );\n    \n\n\n}\n\nexport default Search;","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/app/store.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/resultsSlice.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/querySlice.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Results/index.js",["61","62","63","64","65","66","67","68","69"],"\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport playIcon from \"../../assets/play_circle_outline-24px.svg\";\nimport pauseIcon from \"../../assets/pause.svg\";\nimport prevIcon from \"../../assets/skip_previous-24px.svg\";\nimport nextIcon from \"../../assets/skip_next-24px.svg\";\nimport useProgress from \"../../useProgress\";\n\nimport {\n  selectResult,\n  newResults,\n} from '../../resultsSlice.js';\nimport {\n    selectQuery,\n    newQuery\n  } from '../../querySlice.js';\n\n\n\nfunction Results() {\n    let result = useSelector(selectResult);\n    let query = useSelector(selectQuery);\n    const SLIDE_DURATION = 7000;\n    const MAX_DESCRIPTION_LENGTH = 200;\n    const [slideNumber, setSlideNumber] = useState(0);\n    const [playing, setPlaying] = useState(true);\n    const slideCount = result.length;\n    console.log(\"slideCount: \", slideCount);\n\n    let descriptionString = \"\";\n    \n    if (result[slideNumber] && result[slideNumber].data && result[slideNumber].data[0]) {\n        let maxLength = MAX_DESCRIPTION_LENGTH;\n        let descLength = maxLength;\n        if (result[slideNumber].data[0].description.length < maxLength) {\n            descLength = result[slideNumber].data[0].description.length;\n        }\n        descriptionString = result[slideNumber].data[0].description.slice(0, descLength);\n\n    }\n\n    // This useEffect is the code block that animates the slides.\n    // Note:  The return includes a clearTimeout because if the\n    // slideNumber changes or the playing state changes, we want\n    // to stop the timer and clear it out.\n\n    useEffect(\n        () => {\n        if (playing) {\n           // console.log(slideCount);\n          let slideTimer = setTimeout(() => {\n            console.log(slideCount);\n              // Computer science trick from Ryan Florence\n              // that automatically starts over at zero if\n              // we get to the end of our list (using math \n              // instead of a condition.... yay!)\n            setSlideNumber( (slideNumber + 1) % slideCount);\n            \n        }, SLIDE_DURATION );\n        return () => clearTimeout(slideTimer);\n      }\n      \n    }, [slideNumber, playing, slideCount]);\n\n\n    function next(e) {\n        setSlideNumber( (slideNumber + 1) % result.length );\n        setPlaying(false);\n    }\n    function prev(e) {\n        setSlideNumber( (slideNumber -1  + result.length) % result.length );\n        setPlaying(false);\n    }\n    function play(e) {\n        console.log('toggle playing: ', playing);\n        setPlaying( !playing );\n    }\n\n    function ProgressBar( {animate, time}) {\n        let progress = useProgress(animate, time);\n        return (\n            <div className=\"progressBarContainer\">\n            <div className=\"progressBar\" \n              style={{width: `${progress * 100}%`}} />\n        </div>\n        \n        )\n    }\n        return(<div className=\"result\">\n        {/* { result[slideNumber] ? \"<p></p>\" : \"\" } */}\n\n         {\n             result[slideNumber] && result[slideNumber].links && result[slideNumber].links[0] ?\n             <div className=\"nasaImage\"><img src={result[slideNumber].links[0].href}></img></div>  :\n             <p></p>\n         }\n         {query && query != \"\" ? <div className=\"searchTitle\">Search for: {query}</div> : <p></p>}\n         <div className=\"description\">\n         {\n             result[slideNumber] && result[slideNumber].data && result[slideNumber].data[0] ?\n             <p className='slideTitle'>{result[slideNumber].data[0].title}<br/></p>  :\n             <p></p>\n         }\n         {\n             result[slideNumber] && result[slideNumber].data && result[slideNumber].data[0] ?\n             <p>{descriptionString}</p>: <p></p>\n         }\n         </div> \n         <div className=\"slideNavigation flex-container center\">\n            <div className='navWrapper flex-container center'>\n                <div onClick={prev} >\n                <img src={prevIcon} className=\"icon\"></img>\n                </div>\n                <div className=\"playButton\" onClick={play}>\n                    <img src={playing ? pauseIcon : playIcon} className=\"icon playIcon\">\n                    </img>\n                </div>\n                <div onClick={next} >\n                <img src={nextIcon} className=\"icon\"></img>\n                </div>\n            </div>\n         </div>\n        \n        <ProgressBar\n            key={slideNumber + playing}\n            time={SLIDE_DURATION}\n            animate={playing}\n        />\n    \n            </div>\n        )\n }\n\nexport default Results;","/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/useProgress.js",[],"/Users/bartdority/Sites/Berkeley_bootcamp/my-homework/spaceforce2/src/components/Presets/index.js",["70","71","72","73","74","75","76","77","78"],"import React, { useEffect, useState } from \"react\";\nimport logo from \"../../assets/logo1.jpg\";\nimport \"../../style.css\";\nimport Search from \"../../components/Search\";\nimport Results from \"../../components/Results\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectResult } from \"../../resultsSlice.js\";\nimport { selectQuery, newQuery } from \"../../querySlice.js\";\n\nconst presets = [\n  \"Apollo 11\",\n  \"mars\",\n  \"Space Shuttle\",\n  \"Hubble\",\n  \"Moon\",\n  \"weightless\",\n  \"gravity\",\n  \"zero gravity\",\n  \"g-force\",\n  \"lunar landing\",\n  \"Dark Side\",\n  \"Black Holes\",\n  \"pleiades\",\n  \"pleiades star cluster\",\n  \"Galaxy\",\n  \"galaxies\",\n  \"solar system\",\n  \"star death\",\n  \"Milky Way\",\n  \"Orion\",\n  \"Lockheed Martin\",\n  \"Jet propulsion\",\n  \"Saturn\",\n  \"Pluto\",\n  \"Venus\",\n  \"Jupiter\",\n  \"Jupiter's Moons\",\n  \"LEWIS RESEARCH CENTER\",\n  \"Space Station\",\n  \"Earth\",\n  \"Prometheus\",\n  \"Pandora\",\n  \"Cassini spacecraft\",\n  \"Voyager\",\n  \"Carl Sagan\",\n  \"Chandra X-ray Observatory\",\n  \"supernova\",\n  \"Galaxy Evolution Explorer\",\n  \"Spitzer Space Telescope\",\n  \"radio emissions\",\n  \"x-rays\",\n  \"dark matter\",\n  \"space walk\",\n  \"Endeavour\",\n  \"Bill Nye\",\n  \"Neil deGrasse Tyson\",\n  \"Cosmos\",\n  \"Cape Canaveral\",\n  \"Launch Pad\",\n  \"Kennedy Space Center\",\n];\n\nfunction Presets() {\n  const dispatch = useDispatch();\n  function selectPreset(e) {\n      let searchTerm = \"\";\n    // console.log('selected: ', e.target.value);\n    if (e.target.value != \"Topics\") {\n      searchTerm = e.target.value;\n    }\n    dispatch(newQuery(searchTerm));\n  }\n\n  return (\n      <>\n      <label>Topics:&nbsp;&nbsp;</label>\n    <select onChange={selectPreset} className=\"presetSelect\">\n      {presets.map((preset, index) => (\n        <option key={index} onClick={selectPreset} className=\"presetLink\">\n          {preset}\n        </option>\n      ))}\n    </select>\n    </>\n  );\n}\n\nexport default Presets;",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":1,"column":28,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"88","line":6,"column":23,"nodeType":"85","messageId":"86","endLine":6,"endColumn":34},{"ruleId":"83","severity":1,"message":"89","line":8,"column":23,"nodeType":"85","messageId":"86","endLine":8,"endColumn":31},{"ruleId":"83","severity":1,"message":"90","line":12,"column":7,"nodeType":"85","messageId":"86","endLine":12,"endColumn":20},{"ruleId":"83","severity":1,"message":"91","line":15,"column":7,"nodeType":"85","messageId":"86","endLine":15,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":29,"column":23,"nodeType":"94","messageId":"95","endLine":29,"endColumn":25},{"ruleId":"83","severity":1,"message":"96","line":21,"column":10,"nodeType":"85","messageId":"86","endLine":21,"endColumn":21},{"ruleId":"83","severity":1,"message":"91","line":22,"column":9,"nodeType":"85","messageId":"86","endLine":22,"endColumn":15},{"ruleId":"97","severity":1,"message":"98","line":32,"column":8,"nodeType":"99","endLine":32,"endColumn":15,"suggestions":"100"},{"ruleId":"92","severity":1,"message":"101","line":58,"column":18,"nodeType":"94","messageId":"95","endLine":58,"endColumn":20},{"ruleId":"83","severity":1,"message":"102","line":66,"column":9,"nodeType":"85","messageId":"86","endLine":66,"endColumn":19},{"ruleId":"83","severity":1,"message":"103","line":2,"column":38,"nodeType":"85","messageId":"86","endLine":2,"endColumn":44},{"ruleId":"83","severity":1,"message":"88","line":3,"column":23,"nodeType":"85","messageId":"86","endLine":3,"endColumn":34},{"ruleId":"83","severity":1,"message":"104","line":12,"column":3,"nodeType":"85","messageId":"86","endLine":12,"endColumn":13},{"ruleId":"83","severity":1,"message":"89","line":16,"column":5,"nodeType":"85","messageId":"86","endLine":16,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":95,"column":41,"nodeType":"107","endLine":95,"endColumn":86},{"ruleId":"92","severity":1,"message":"93","line":98,"column":26,"nodeType":"94","messageId":"95","endLine":98,"endColumn":28},{"ruleId":"105","severity":1,"message":"106","line":113,"column":17,"nodeType":"107","endLine":113,"endColumn":54},{"ruleId":"105","severity":1,"message":"106","line":116,"column":21,"nodeType":"107","endLine":116,"endColumn":89},{"ruleId":"105","severity":1,"message":"106","line":120,"column":17,"nodeType":"107","endLine":120,"endColumn":54},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":1,"column":28,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"108","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":12},{"ruleId":"83","severity":1,"message":"109","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":14},{"ruleId":"83","severity":1,"message":"110","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":15},{"ruleId":"83","severity":1,"message":"111","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":21},{"ruleId":"83","severity":1,"message":"112","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":22},{"ruleId":"83","severity":1,"message":"113","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":21},{"ruleId":"92","severity":1,"message":"93","line":68,"column":24,"nodeType":"94","messageId":"95","endLine":68,"endColumn":26},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useDispatch' is defined but never used.","'newQuery' is defined but never used.","'defaultOption' is assigned a value but never used.","'result' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'resultsList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'grabData'. Either include it or remove the dependency array.","ArrayExpression",["116"],"Expected '===' and instead saw '=='.","'localQuery' is assigned a value but never used.","'useRef' is defined but never used.","'newResults' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'logo' is defined but never used.","'Search' is defined but never used.","'Results' is defined but never used.","'useSelector' is defined but never used.","'selectResult' is defined but never used.","'selectQuery' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [grabData, query]",{"range":"119","text":"120"},[804,811],"[grabData, query]"]